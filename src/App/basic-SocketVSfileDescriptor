Sockets are actually implemented as file descriptors so all sockets are file descriptors but the converse is not true.
The first step in the process is the socket() system call. It returns a small integer (a file descriptor) but no actual network connection exists at this point.
The next step is to associate this file descriptor with a network connection and that is the job of the connect() or bind() system calls.
A file descriptor is a number that uniquely identifies an open file in a computer's operating system.
A socket is one endpoint of a two-way communication link between two programs running on the network.
A socket is bound to a port number so that the TCP layer can identify the application that data is destined to be sent to. An endpoint is a combination of an IP address and a port number.